name: Cross Build

on:
#  push:
#    branches:
#      - "*"
#  pull_request:
#    branches:
#      - "*"
  workflow_dispatch:

jobs:
  android-arm-release:
    name: Build - ${{ matrix.platform.release_for }}
    strategy:
      matrix:
        platform:
          - release_for: android_armv7
            target: armv7-linux-androideabi
            binary_name: IP-Hacker-android-armv7
          - release_for: android_arm
            target: arm-linux-androideabi
            binary_name: IP-Hacker-android-arm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Lib
        run: sudo apt update && sudo apt install -y musl-tools musl-dev musl upx
      - name: Install Cross
        run: cargo install cross --git https://github.com/cross-rs/cross
      - name: Build binary
        run: cross build --target ${{ matrix.platform.target }} --profile minimal --jobs 32 --locked
        env:
          CROSS_PASTEBIN_SECRET: ${{ secrets.PASTEBIN_SECRET }}
          CROSS_PASTEBIN_URL: ${{ secrets.PASTEBIN_URL }}
          CROSS_NO_WARNINGS: 0
      - name: Rename binary
        run: cp target/${{ matrix.platform.target }}/minimal/IP-Hacker target/${{ matrix.platform.target }}/minimal/${{ matrix.platform.binary_name }}
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.target }}
          path: target/${{ matrix.platform.target }}/minimal/${{ matrix.platform.binary_name }}
      - name: Publish to GitHub Release
        #        if: github.event_name == 'push'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/${{ matrix.platform.target }}/minimal/${{ matrix.platform.binary_name }}
          tag_name: latest # 使用固定的标签名称作为发布版本号
          body: |
            Note: All Release operations will publish the Binary and software packages here
            Latest release for Commit: ${{ github.sha }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  android-arm64-release:
    name: Build - ${{ matrix.platform.release_for }}
    strategy:
      matrix:
        platform:
          - release_for: android_aarch64
            target: aarch64-linux-android
            binary_name: IP-Hacker-android-aarch64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Lib
        run: sudo apt update && sudo apt install -y musl-tools musl-dev musl upx
      - name: Install Cross
        run: cargo install cross --git https://github.com/cross-rs/cross
      - name: Build binary
        run: cross build --target ${{ matrix.platform.target }} --profile minimal --jobs 32 --locked
        env:
          CROSS_NO_WARNINGS: 0
          CROSS_PASTEBIN_SECRET: ${{ secrets.PASTEBIN_SECRET }}
          CROSS_PASTEBIN_URL: ${{ secrets.PASTEBIN_URL }}
      - name: Rename binary
        run: cp target/${{ matrix.platform.target }}/minimal/IP-Hacker target/${{ matrix.platform.target }}/minimal/${{ matrix.platform.binary_name }}
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.target }}
          path: target/${{ matrix.platform.target }}/minimal/${{ matrix.platform.binary_name }}
      - name: Publish to GitHub Release
        #        if: github.event_name == 'push'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/${{ matrix.platform.target }}/minimal/${{ matrix.platform.binary_name }}
          tag_name: latest # 使用固定的标签名称作为发布版本号
          body: |
            Note: All Release operations will publish the Binary and software packages here
            Latest release for Commit: ${{ github.sha }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  linux-all-platforms-release:
    name: Build - ${{ matrix.platform.release_for }}
    strategy:
      matrix:
        platform:
          - release_for: linux_x86_64_musl
            target: x86_64-unknown-linux-musl
            binary_name: IP-Hacker-linux-x86_64-musl
          - release_for: linux_x86_64_gnu
            target: x86_64-unknown-linux-gnu
            binary_name: IP-Hacker-linux-x86_64-gnu
          - release_for: linux_arm_gnueabi
            target: arm-unknown-linux-gnueabi
            binary_name: IP-Hacker-linux-arm-gnueabi
          - release_for: linux_arm_gnueabihf
            target: arm-unknown-linux-gnueabihf
            binary_name: IP-Hacker-linux-arm-gnueabihf
          - release_for: linux_aarch64_gnu
            target: aarch64-unknown-linux-gnu
            binary_name: IP-Hacker-linux-aarch64-gnu
          - release_for: linux_aarch64_musl
            target: aarch64-unknown-linux-musl
            binary_name: IP-Hacker-linux-aarch64-musl
          - release_for: linux_i686_gnu
            target: i686-unknown-linux-gnu
            binary_name: IP-Hacker-linux-i686-gnu
          - release_for: linux_i686_musl
            target: i686-unknown-linux-musl
            binary_name: IP-Hacker-linux-i686-musl
          - release_for: linux_arm_musleabi
            target: arm-unknown-linux-musleabi
            binary_name: IP-Hacker-linux-arm-musleabi
          - release_for: linux_arm_musleabihf
            target: arm-unknown-linux-musleabihf
            binary_name: IP-Hacker-linux-arm-musleabihf
          - release_for: linux_armv5te_gnu
            target: armv5te-unknown-linux-gnueabi
            binary_name: IP-Hacker-linux-armv5te-gnueabi
          - release_for: linux_armv5te_musl
            target: armv5te-unknown-linux-musleabi
            binary_name: IP-Hacker-linux-armv5te-musleabi
          - release_for: linux_armv7_gnueabi
            target: armv7-unknown-linux-gnueabi
            binary_name: IP-Hacker-linux-armv7-gnueabi
          - release_for: linux_armv7_gnueabihf
            target: armv7-unknown-linux-gnueabihf
            binary_name: IP-Hacker-linux-armv7-gnueabihf
          - release_for: linux_armv7_musleabi
            target: armv7-unknown-linux-musleabi
            binary_name: IP-Hacker-linux-armv7-musleabi
          - release_for: linux_armv7_musleabihf
            target: armv7-unknown-linux-musleabihf
            binary_name: IP-Hacker-linux-armv7-musleabihf
    #          - release_for: linux_s390x_gnu
    #            target: s390x-unknown-linux-gnu
    #            binary_name: IP-Hacker-linux-s390x-gnu
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Lib
        run: sudo apt update && sudo apt install -y musl-tools musl-dev musl upx
      - name: Install Cross
        run: cargo install cross --git https://github.com/cross-rs/cross
      - name: Build binary
        run: cross build --target ${{ matrix.platform.target }} --profile minimal --jobs 32 --locked
        env:
          CROSS_PASTEBIN_SECRET: ${{ secrets.PASTEBIN_SECRET }}
          CROSS_PASTEBIN_URL: ${{ secrets.PASTEBIN_URL }}
          CROSS_NO_WARNINGS: 0
      - name: Install Upx Binary
        run: sudo apt install -y upx
      - name: Compress binary
        run: upx --brute target/${{ matrix.platform.target }}/minimal/IP-Hacker
      - name: Rename binary
        run: cp target/${{ matrix.platform.target }}/minimal/IP-Hacker target/${{ matrix.platform.target }}/minimal/${{ matrix.platform.binary_name }}
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.target }}
          path: target/${{ matrix.platform.target }}/minimal/${{ matrix.platform.binary_name }}
      - name: Publish to GitHub Release
        #        if: github.event_name == 'push'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/${{ matrix.platform.target }}/minimal/${{ matrix.platform.binary_name }}
            target/${{ matrix.platform.target }}/debian/${{ matrix.platform.binary_name }}.deb
          tag_name: latest # 使用固定的标签名称作为发布版本号
          body: |
            Note: All Release operations will publish the Binary and software packages here
            Latest release for Commit: ${{ github.sha }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  windows-release:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Cargo Build
        run: cargo build --profile minimal
        env:
          CROSS_PASTEBIN_SECRET: ${{ secrets.PASTEBIN_SECRET }}
          CROSS_PASTEBIN_URL: ${{ secrets.PASTEBIN_URL }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: target/minimal/IP-Hacker.exe
      - name: Publish to GitHub Release
        #        if: github.event_name == 'push'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/minimal/IP-Hacker.exe
          tag_name: latest # 使用固定的标签名称作为发布版本号
          body: |
            Note: All Release operations will publish the Binary and software packages here
            Latest release for Commit: ${{ github.sha }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  macos-amd64-release:
    runs-on: macos-13
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Cargo Build
        run: cargo build --profile minimal
        env:
          CROSS_PASTEBIN_SECRET: ${{ secrets.PASTEBIN_SECRET }}
          CROSS_PASTEBIN_URL: ${{ secrets.PASTEBIN_URL }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-amd64
          path: target/minimal/IP-Hacker
      - name: Rename Binary
        run: mv target/minimal/IP-Hacker target/minimal/IP-Hacker-macos-amd64
      - name: Publish to GitHub Release
        #        if: github.event_name == 'push'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/minimal/IP-Hacker-macos-amd64
          tag_name: latest # 使用固定的标签名称作为发布版本号
          body: |
            Note: All Release operations will publish the Binary and software packages here
            Latest release for Commit: ${{ github.sha }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  macos-arm64-release:
    #    runs-on: [self-hosted, macOS]
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache: false
      - name: Cargo Build
        run: cargo build --profile minimal
        env:
          CROSS_PASTEBIN_SECRET: ${{ secrets.PASTEBIN_SECRET }}
          CROSS_PASTEBIN_URL: ${{ secrets.PASTEBIN_URL }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-arm64
          path: target/minimal/IP-Hacker
      - name: Rename Binary
        run: mv target/minimal/IP-Hacker target/minimal/IP-Hacker-macos-arm64
      - name: Publish to GitHub Release
        #        if: github.event_name == 'push'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/minimal/IP-Hacker-macos-arm64
          tag_name: latest # 使用固定的标签名称作为发布版本号
          body: |
            Note: All Release operations will publish the Binary and software packages here
            Latest release for Commit: ${{ github.sha }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  gui-linux-x86_64:
    needs: linux-all-platforms-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Lib
        run: sudo apt update && sudo apt install -y wget musl-tools musl-dev musl libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Build binary
        run: cargo build --profile minimal --jobs 32 --locked
        working-directory: ./gui
        env:
          CROSS_NO_WARNINGS: 0
      - name: Install Upx Binary
        run: sudo apt install -y upx
      - name: List Files
        run: ls -lah ./gui && ls -lah ./gui/target && ls -lah ./gui/target/minimal
      - name: Compress binary
        run: upx --brute ./gui/target/minimal/IP-Hacker-GUI
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: linux-x86_64-gui-binary
          path: ./gui/target/minimal/IP-Hacker-GUI
      - name: mkdir & cp
        run: mkdir -p ./gui/release/IP-Hacker-GUI && cp ./gui/target/minimal/IP-Hacker-GUI ./gui/release/IP-Hacker-GUI/
      - name: Download IP-Hacker
        run: wget https://github.com/rsbench/IP-Hacker/releases/download/latest/IP-Hacker-linux-x86_64-gnu -O ./gui/release/IP-Hacker-GUI/IP-Hacker && chmod +x ./gui/release/IP-Hacker-GUI/IP-Hacker
      - name: Tar xz
        run: tar -zcvf linux-x86_64-gnu-with-gui.tar.gz ./gui/release/IP-Hacker-GUI
      - name: Publish to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            linux-x86_64-gnu-with-gui.tar.gz
          tag_name: latest
          body: |
            Note: All Release operations will publish the Binary and software packages here
            Latest release for Commit: ${{ github.sha }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  gui-windows-x86_64:
    needs: windows-release
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Build binary
        run: cargo build --profile minimal --jobs 32 --locked
        working-directory: ./gui
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: windows-x86_64-gui-binary
          path: ./gui/target/minimal/IP-Hacker-GUI.exe
      - name: mkdir & cp
        run: mkdir ./gui/release/IP-Hacker-GUI && copy ./gui/target/minimal/IP-Hacker-GUI.exe ./gui/release/IP-Hacker-GUI/
      - name: Download IP-Hacker
        run: Invoke-WebRequest -Uri https://github.com/rsbench/IP-Hacker/releases/download/latest/IP-Hacker.exe -OutFile ./gui/release/IP-Hacker-GUI/IP-Hacker.exe
      - uses: vimtor/action-zip@v1.2
        with:
          files: gui/release/IP-Hacker-GUI/
          dest: windows-x86_64-with-gui.zip
      - name: Publish to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            windows-x86_64-with-gui.zip
          tag_name: latest
          body: |
            Note: All Release operations will publish the Binary and software packages here
            Latest release for Commit: ${{ github.sha }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  gui-macos-amd64-release:
    needs: macos-amd64-release
    runs-on: macos-13
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Tar
        run: brew install gnu-tar
      - name: Install Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Cargo Build
        working-directory: ./gui
        run: cargo build --profile minimal
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-amd64-gui
          path: ./gui/target/minimal/IP-Hacker-GUI
      - name: mkdir & cp
        run: mkdir -p ./gui/release/IP-Hacker-GUI && cp ./gui/target/minimal/IP-Hacker-GUI ./gui/release/IP-Hacker-GUI/
      - name: Download IP-Hacker
        run: wget https://github.com/rsbench/IP-Hacker/releases/download/latest/IP-Hacker-macos-amd64 -O ./gui/release/IP-Hacker-GUI/IP-Hacker && chmod +x ./gui/release/IP-Hacker-GUI/IP-Hacker
      - name: Tar xz
        run: tar -zcvf macos-amd64-with-gui.tar.gz ./gui/release/IP-Hacker-GUI
      - name: Publish to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            macos-amd64-with-gui.tar.gz
          tag_name: latest
          body: |
            Note: All Release operations will publish the Binary and software packages here
            Latest release for Commit: ${{ github.sha }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  gui-macos-arm64-release:
    needs: macos-arm64-release
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Tar
        run: brew install gnu-tar
      - name: Install Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache: false
      - name: Cargo Build
        working-directory: ./gui
        run: cargo build --profile minimal
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-arm64-gui
          path: ./gui/target/minimal/IP-Hacker-GUI
      - name: mkdir & cp
        run: mkdir -p ./gui/release/IP-Hacker-GUI && cp ./gui/target/minimal/IP-Hacker-GUI ./gui/release/IP-Hacker-GUI/
      - name: Download IP-Hacker
        run: wget https://github.com/rsbench/IP-Hacker/releases/download/latest/IP-Hacker-macos-arm64 -O ./gui/release/IP-Hacker-GUI/IP-Hacker && chmod +x ./gui/release/IP-Hacker-GUI/IP-Hacker
      - name: Tar xz
        run: tar -zcvf macos-arm64-with-gui.tar.gz ./gui/release/IP-Hacker-GUI
      - name: Publish to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            macos-arm64-with-gui.tar.gz
          tag_name: latest
          body: |
            Note: All Release operations will publish the Binary and software packages here
            Latest release for Commit: ${{ github.sha }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
